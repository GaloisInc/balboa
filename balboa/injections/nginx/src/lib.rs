//! Injection support for `nginx`.

use balboa_compression_http::StaticFileDirectory;
use balboa_injection::{balboa_inject, BalboaInterceptors};
use balboa_rewriter::{
    tls_rewriter::{ClientServerMessageOrdering, TLSRewriterMode},
    IncomingRewriter, OutgoingRewriter,
};
use std::{net::SocketAddr, path::PathBuf, sync::Arc};

struct NginxInjection;
impl BalboaInterceptors for NginxInjection {
    const STALLONE_FOLLOW_FORKS: bool = true;
    fn initialize() -> Self {
        NginxInjection
    }
    fn listen_on_addr(&self, remote: SocketAddr) -> bool {
        remote.port() == 9443
    }

    fn rewriters_for_tcp_server(
        &self,
        remote: SocketAddr,
    ) -> Option<(
        Box<dyn IncomingRewriter + Send>,
        Box<dyn OutgoingRewriter + Send>,
    )> {
        let (c, d) = balboa_compression_http::new_server_rewriters(
            Arc::new(
                StaticFileDirectory::new(&PathBuf::from(
                    std::env::var_os("STATIC_FILE_DIRECTORY")
                        .expect("STATIC_FILE_DIRECTORY env var missing"),
                ))
                .unwrap(),
            ),
            Arc::new(
                StaticFileDirectory::new(&PathBuf::from(
                    std::env::var_os("UPLOAD_FILE_DIRECTORY")
                        .expect("UPLOAD_FILE_DIRECTORY env var missing"),
                ))
                .unwrap(),
            ),
        );
        Some(balboa_injection::make_rewriters(
            remote,
            TLSRewriterMode::Server,
            // Because Icecast responds to HTTP
            ClientServerMessageOrdering::FirstClientMessagePrecedesFirstServerMessage,
            c,
            d,
            Arc::new(&*SSL_KEY_LOG_FILE),
        ))
    }
}

balboa_inject!(NginxInjection);

// Nginx uses _multiple processes!_ While we could use the filesystem to store the sslkeylogfile
// entries, because Nginx doesn't pass connections between worker processes, it's completely okay
// for each worker process to have its own copy of sslkeylogfile entries, since other worker
// processes will never need to access the entries generated by another worker process.
balboa_openssl_injection::balboa_inject_openssl_sslkeylogfile!(
    SSL_KEY_LOG_FILE: balboa_rewriter::sslkeylogfile::SSLKeyLogFile
);
